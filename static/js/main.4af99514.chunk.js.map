{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onHandleAddMovie","useState","setTitle","hasError","setHasError","isLoading","setIsLoading","previewMovie","setPreviewMovie","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","data","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4af99514.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  onHandleAddMovie: (movie: Movie) => void,\n}\n\nconst defaultMoviePicture\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const FindMovie: React.FC<Props> = ({ onHandleAddMovie }) => {\n  const [title, setTitle] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewMovie, setPreviewMovie] = useState<Movie | null>(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(title)\n      .then((data: MovieData) => {\n        if (data.Response === 'False') {\n          setHasError(true);\n        } else {\n          setPreviewMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster === 'N/A' ? defaultMoviePicture : data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!title}\n            >\n              Find a movie\n            </button>\n          </div>\n          {previewMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  onHandleAddMovie(previewMovie);\n                  setTitle('');\n                  setPreviewMovie(null);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n\n          )}\n        </div>\n      </form>\n\n      {previewMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={previewMovie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=971539a4';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    const isMovieFound = movies.some(movie => movie.title === newMovie.title);\n\n    if (!isMovieFound) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onHandleAddMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}